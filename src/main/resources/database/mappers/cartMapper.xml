<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.thr.i1.cart.CartDAO">
	<!-- 장바구니에 담기 -->
   	 <insert id="cartInsert" parameterType="CartDTO">
        insert into cart (cart_Id, id, num, product_id, fileNum, Amount)
        values 
          (cart_seq.nextval, #{id}, #{num}, #{product_id}, #{fileNum}, #{amount} )
        
	  </insert>
	  
	  
	 <!-- 장바구니 리스트 -->
	 <!-- 카트번호, 제품번호, 회원아이디, 회원명, 상품명, 수량, 가격, 가격합계, 이미지파일명, 파일번호 -->
	 <!-- 조건: 회원테이블의 회원id = 장바구니테이블의 회원id 
	 and 장바구니테이블의 상품id = 상품테이블의 상품id 
	 and 장바구니테이블의 파일번호 = 파일테이블의 파일번호 
	 and 장바구니테이블의 회원id = 파라미터로 받은 회원id-->
	  <select id="cartList" resultType="CartDTO" parameterType="String">
	  	select cart_Id, c.num, c.id, t.name, c.product_Id, product_Name
    , amount, price, (price*amount) money, filenum, filename
    
	  	from cart c
	  	INNER JOIN tuser t
	  	ON(c.id=t.id)
        INNER JOIN tuser t
        ON(c.num=t.num)
	  	INNER JOIN product p
	  	ON(c.product_id=p.product_id)
	  	INNER JOIN productFiles f
	  	USING(FILENUM)
	  	
	  	where c.id=#{userid}
	  	
	  	order by cart_Id desc
	  </select>
	  
	  <!-- 리스트 테스트용. id에 붙은 숫자 1은 그냥 비활성화하려고 만든 용도-->
	  <select id="cartList1" resultType="CartDTO" parameterType="String">
	  	select *
	  	from cart
	  	where id=#{userid}
	  	order by cart_Id desc
	  </select>
	  
	  <!-- 장바구니 금액 합계 -->
	  <select id="sumMoney" resultType="_int" parameterType="String">
	  	select nvl(sum(price*amount),0)
	  	
	  	from cart c
	  	INNER JOIN product p
	  	USING(PRODUCT_ID)
	  	where c.id=#{userid}
	  	
	  </select>
	  
	  <!-- 장바구니 1개 삭제 -->
	  <delete id="deleteOne" parameterType="CartDTO">
	  	delete from cart
	  	where cart_Id=#{cart_Id}  
	  	AND id = #{id}
	  </delete>
	  
	  <!-- 장바구니 전체 삭제 -->
	  <delete id="deleteAll" parameterType="String">
	  	delete from cart
	  	where ID=#{userid} 
	  </delete>
	  
	  <!-- 장바구니 수량 수정 -->
	  <update id="update" parameterType="CartDTO">
	  	update cart 
	  	set amount=#{amount}
	  	where cart_Id=#{cart_Id} and id=#{id}
	  </update>
	  
	  <!-- 장바구니 추가 시 상품 중복 확인 -->
	  <select id="countCart" resultType="_int">
        SELECT COUNT(*)
        FROM cart
        WHERE id= #{user_Id} 
        AND product_id = #{product_id}
 	   </select>
 	   
 	  <!-- 장바구니 상품 중복 시 수량 추가 -->
 	   <update id="addAmount">
 	   	UPDATE cart
 	   	SET amount=amount + #{amount}
 	   	WHERE id=#{id}
 	   	AND product_Id=#{product_id}
 	   </update>
 	   
 	   
 	   
 	   
 	   <!-- 주문서에 담기 -->
 	   <insert id="insertOrder">
 	   	INSERT INTO CART_ORDER
 	   	(ORDER_NUM, ID, NUM, PRODUCT_NAME, SUMALL, SUMMONEY, FEE, NAME, EMAIL, PHONE, ADDRESS)
 	   	VALUES
 	   	(order_seq.nextval, #{id}, #{num}, #{pName}
 	   	, #{sumAll}, #{sumMoney}, #{fee}, #{name}, #{email}, #{phone}, #{address})
 	   </insert>
 	   
 	   
 	   <!-- 주문내역 조회 -->
 	   <select id="orderList" resultType="OrderDTO">
 	   	SELECT *
 	   	FROM CART_ORDER
 	   	WHERE ID=#{id}
 	   
 	   </select>
 	   
  </mapper>